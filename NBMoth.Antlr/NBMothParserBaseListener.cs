//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:\source\nbmoth-parser-only\NBMothAntlr\NBMothParser.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


//package de.bmoth.antlr;


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="INBMothParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class NBMothParserBaseListener : INBMothParserListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>ParseUnit</c>
	/// labeled alternative in <see cref="NBMothParser.start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParseUnit([NotNull] NBMothParser.ParseUnitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ParseUnit</c>
	/// labeled alternative in <see cref="NBMothParser.start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParseUnit([NotNull] NBMothParser.ParseUnitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>MachineParseUnit</c>
	/// labeled alternative in <see cref="NBMothParser.parse_unit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMachineParseUnit([NotNull] NBMothParser.MachineParseUnitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>MachineParseUnit</c>
	/// labeled alternative in <see cref="NBMothParser.parse_unit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMachineParseUnit([NotNull] NBMothParser.MachineParseUnitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PredicateClause</c>
	/// labeled alternative in <see cref="NBMothParser.machine_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPredicateClause([NotNull] NBMothParser.PredicateClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PredicateClause</c>
	/// labeled alternative in <see cref="NBMothParser.machine_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPredicateClause([NotNull] NBMothParser.PredicateClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DeclarationClause</c>
	/// labeled alternative in <see cref="NBMothParser.machine_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclarationClause([NotNull] NBMothParser.DeclarationClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DeclarationClause</c>
	/// labeled alternative in <see cref="NBMothParser.machine_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclarationClause([NotNull] NBMothParser.DeclarationClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>InitialisationClause</c>
	/// labeled alternative in <see cref="NBMothParser.machine_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInitialisationClause([NotNull] NBMothParser.InitialisationClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>InitialisationClause</c>
	/// labeled alternative in <see cref="NBMothParser.machine_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInitialisationClause([NotNull] NBMothParser.InitialisationClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>OperationsClause</c>
	/// labeled alternative in <see cref="NBMothParser.machine_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperationsClause([NotNull] NBMothParser.OperationsClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>OperationsClause</c>
	/// labeled alternative in <see cref="NBMothParser.machine_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperationsClause([NotNull] NBMothParser.OperationsClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SetsClause</c>
	/// labeled alternative in <see cref="NBMothParser.machine_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSetsClause([NotNull] NBMothParser.SetsClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SetsClause</c>
	/// labeled alternative in <see cref="NBMothParser.machine_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSetsClause([NotNull] NBMothParser.SetsClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DefinitionClauseIndirection</c>
	/// labeled alternative in <see cref="NBMothParser.machine_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefinitionClauseIndirection([NotNull] NBMothParser.DefinitionClauseIndirectionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DefinitionClauseIndirection</c>
	/// labeled alternative in <see cref="NBMothParser.machine_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefinitionClauseIndirection([NotNull] NBMothParser.DefinitionClauseIndirectionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DeferredSet</c>
	/// labeled alternative in <see cref="NBMothParser.set_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeferredSet([NotNull] NBMothParser.DeferredSetContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DeferredSet</c>
	/// labeled alternative in <see cref="NBMothParser.set_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeferredSet([NotNull] NBMothParser.DeferredSetContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>EnumeratedSet</c>
	/// labeled alternative in <see cref="NBMothParser.set_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumeratedSet([NotNull] NBMothParser.EnumeratedSetContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>EnumeratedSet</c>
	/// labeled alternative in <see cref="NBMothParser.set_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumeratedSet([NotNull] NBMothParser.EnumeratedSetContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DefinitionClause</c>
	/// labeled alternative in <see cref="NBMothParser.definition_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefinitionClause([NotNull] NBMothParser.DefinitionClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DefinitionClause</c>
	/// labeled alternative in <see cref="NBMothParser.definition_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefinitionClause([NotNull] NBMothParser.DefinitionClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>OrdinaryDefinition</c>
	/// labeled alternative in <see cref="NBMothParser.single_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrdinaryDefinition([NotNull] NBMothParser.OrdinaryDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>OrdinaryDefinition</c>
	/// labeled alternative in <see cref="NBMothParser.single_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrdinaryDefinition([NotNull] NBMothParser.OrdinaryDefinitionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DefinitionFile</c>
	/// labeled alternative in <see cref="NBMothParser.single_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefinitionFile([NotNull] NBMothParser.DefinitionFileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DefinitionFile</c>
	/// labeled alternative in <see cref="NBMothParser.single_definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefinitionFile([NotNull] NBMothParser.DefinitionFileContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DefinitionAmbiguousCall</c>
	/// labeled alternative in <see cref="NBMothParser.definition_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefinitionAmbiguousCall([NotNull] NBMothParser.DefinitionAmbiguousCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DefinitionAmbiguousCall</c>
	/// labeled alternative in <see cref="NBMothParser.definition_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefinitionAmbiguousCall([NotNull] NBMothParser.DefinitionAmbiguousCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DefinitionExpression</c>
	/// labeled alternative in <see cref="NBMothParser.definition_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefinitionExpression([NotNull] NBMothParser.DefinitionExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DefinitionExpression</c>
	/// labeled alternative in <see cref="NBMothParser.definition_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefinitionExpression([NotNull] NBMothParser.DefinitionExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DefinitionPredicate</c>
	/// labeled alternative in <see cref="NBMothParser.definition_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefinitionPredicate([NotNull] NBMothParser.DefinitionPredicateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DefinitionPredicate</c>
	/// labeled alternative in <see cref="NBMothParser.definition_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefinitionPredicate([NotNull] NBMothParser.DefinitionPredicateContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>DefinitionSubstitution</c>
	/// labeled alternative in <see cref="NBMothParser.definition_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefinitionSubstitution([NotNull] NBMothParser.DefinitionSubstitutionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>DefinitionSubstitution</c>
	/// labeled alternative in <see cref="NBMothParser.definition_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefinitionSubstitution([NotNull] NBMothParser.DefinitionSubstitutionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Operation</c>
	/// labeled alternative in <see cref="NBMothParser.single_operation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperation([NotNull] NBMothParser.OperationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Operation</c>
	/// labeled alternative in <see cref="NBMothParser.single_operation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperation([NotNull] NBMothParser.OperationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NBMothParser.quantified_variables_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuantified_variables_list([NotNull] NBMothParser.Quantified_variables_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NBMothParser.quantified_variables_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuantified_variables_list([NotNull] NBMothParser.Quantified_variables_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NBMothParser.identifier_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier_list([NotNull] NBMothParser.Identifier_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NBMothParser.identifier_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier_list([NotNull] NBMothParser.Identifier_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SelectSubstitution</c>
	/// labeled alternative in <see cref="NBMothParser.substitution"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelectSubstitution([NotNull] NBMothParser.SelectSubstitutionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SelectSubstitution</c>
	/// labeled alternative in <see cref="NBMothParser.substitution"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelectSubstitution([NotNull] NBMothParser.SelectSubstitutionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CaseSubstitution</c>
	/// labeled alternative in <see cref="NBMothParser.substitution"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseSubstitution([NotNull] NBMothParser.CaseSubstitutionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CaseSubstitution</c>
	/// labeled alternative in <see cref="NBMothParser.substitution"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseSubstitution([NotNull] NBMothParser.CaseSubstitutionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ConditionSubstitution</c>
	/// labeled alternative in <see cref="NBMothParser.substitution"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditionSubstitution([NotNull] NBMothParser.ConditionSubstitutionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ConditionSubstitution</c>
	/// labeled alternative in <see cref="NBMothParser.substitution"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditionSubstitution([NotNull] NBMothParser.ConditionSubstitutionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>BlockSubstitution</c>
	/// labeled alternative in <see cref="NBMothParser.substitution"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlockSubstitution([NotNull] NBMothParser.BlockSubstitutionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>BlockSubstitution</c>
	/// labeled alternative in <see cref="NBMothParser.substitution"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlockSubstitution([NotNull] NBMothParser.BlockSubstitutionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>AnySubstitution</c>
	/// labeled alternative in <see cref="NBMothParser.substitution"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnySubstitution([NotNull] NBMothParser.AnySubstitutionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AnySubstitution</c>
	/// labeled alternative in <see cref="NBMothParser.substitution"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnySubstitution([NotNull] NBMothParser.AnySubstitutionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ParallelSubstitution</c>
	/// labeled alternative in <see cref="NBMothParser.substitution"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParallelSubstitution([NotNull] NBMothParser.ParallelSubstitutionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ParallelSubstitution</c>
	/// labeled alternative in <see cref="NBMothParser.substitution"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParallelSubstitution([NotNull] NBMothParser.ParallelSubstitutionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>IfSubstitution</c>
	/// labeled alternative in <see cref="NBMothParser.substitution"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfSubstitution([NotNull] NBMothParser.IfSubstitutionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IfSubstitution</c>
	/// labeled alternative in <see cref="NBMothParser.substitution"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfSubstitution([NotNull] NBMothParser.IfSubstitutionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SkipSubstitution</c>
	/// labeled alternative in <see cref="NBMothParser.substitution"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSkipSubstitution([NotNull] NBMothParser.SkipSubstitutionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SkipSubstitution</c>
	/// labeled alternative in <see cref="NBMothParser.substitution"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSkipSubstitution([NotNull] NBMothParser.SkipSubstitutionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>BecomesElementOfSubstitution</c>
	/// labeled alternative in <see cref="NBMothParser.substitution"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBecomesElementOfSubstitution([NotNull] NBMothParser.BecomesElementOfSubstitutionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>BecomesElementOfSubstitution</c>
	/// labeled alternative in <see cref="NBMothParser.substitution"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBecomesElementOfSubstitution([NotNull] NBMothParser.BecomesElementOfSubstitutionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>WhileSubstitution</c>
	/// labeled alternative in <see cref="NBMothParser.substitution"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileSubstitution([NotNull] NBMothParser.WhileSubstitutionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>WhileSubstitution</c>
	/// labeled alternative in <see cref="NBMothParser.substitution"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileSubstitution([NotNull] NBMothParser.WhileSubstitutionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>AssignSubstitution</c>
	/// labeled alternative in <see cref="NBMothParser.substitution"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignSubstitution([NotNull] NBMothParser.AssignSubstitutionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>AssignSubstitution</c>
	/// labeled alternative in <see cref="NBMothParser.substitution"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignSubstitution([NotNull] NBMothParser.AssignSubstitutionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>BecomesSuchThatSubstitution</c>
	/// labeled alternative in <see cref="NBMothParser.substitution"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBecomesSuchThatSubstitution([NotNull] NBMothParser.BecomesSuchThatSubstitutionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>BecomesSuchThatSubstitution</c>
	/// labeled alternative in <see cref="NBMothParser.substitution"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBecomesSuchThatSubstitution([NotNull] NBMothParser.BecomesSuchThatSubstitutionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NBMothParser.expression_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_list([NotNull] NBMothParser.Expression_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NBMothParser.expression_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_list([NotNull] NBMothParser.Expression_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NBMothParser.formula"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFormula([NotNull] NBMothParser.FormulaContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NBMothParser.formula"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFormula([NotNull] NBMothParser.FormulaContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PredicateIdentifier</c>
	/// labeled alternative in <see cref="NBMothParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPredicateIdentifier([NotNull] NBMothParser.PredicateIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PredicateIdentifier</c>
	/// labeled alternative in <see cref="NBMothParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPredicateIdentifier([NotNull] NBMothParser.PredicateIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PredicateDefinitionCall</c>
	/// labeled alternative in <see cref="NBMothParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPredicateDefinitionCall([NotNull] NBMothParser.PredicateDefinitionCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PredicateDefinitionCall</c>
	/// labeled alternative in <see cref="NBMothParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPredicateDefinitionCall([NotNull] NBMothParser.PredicateDefinitionCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>QuantifiedPredicate</c>
	/// labeled alternative in <see cref="NBMothParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuantifiedPredicate([NotNull] NBMothParser.QuantifiedPredicateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>QuantifiedPredicate</c>
	/// labeled alternative in <see cref="NBMothParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuantifiedPredicate([NotNull] NBMothParser.QuantifiedPredicateContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PredicateOperator</c>
	/// labeled alternative in <see cref="NBMothParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPredicateOperator([NotNull] NBMothParser.PredicateOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PredicateOperator</c>
	/// labeled alternative in <see cref="NBMothParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPredicateOperator([NotNull] NBMothParser.PredicateOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>PredicateOperatorWithExprArgs</c>
	/// labeled alternative in <see cref="NBMothParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPredicateOperatorWithExprArgs([NotNull] NBMothParser.PredicateOperatorWithExprArgsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>PredicateOperatorWithExprArgs</c>
	/// labeled alternative in <see cref="NBMothParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPredicateOperatorWithExprArgs([NotNull] NBMothParser.PredicateOperatorWithExprArgsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ParenthesesPredicate</c>
	/// labeled alternative in <see cref="NBMothParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesesPredicate([NotNull] NBMothParser.ParenthesesPredicateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ParenthesesPredicate</c>
	/// labeled alternative in <see cref="NBMothParser.predicate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesesPredicate([NotNull] NBMothParser.ParenthesesPredicateContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SetComprehensionExpression</c>
	/// labeled alternative in <see cref="NBMothParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSetComprehensionExpression([NotNull] NBMothParser.SetComprehensionExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SetComprehensionExpression</c>
	/// labeled alternative in <see cref="NBMothParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSetComprehensionExpression([NotNull] NBMothParser.SetComprehensionExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SetEnumerationExpression</c>
	/// labeled alternative in <see cref="NBMothParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSetEnumerationExpression([NotNull] NBMothParser.SetEnumerationExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SetEnumerationExpression</c>
	/// labeled alternative in <see cref="NBMothParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSetEnumerationExpression([NotNull] NBMothParser.SetEnumerationExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>QuantifiedExpression</c>
	/// labeled alternative in <see cref="NBMothParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuantifiedExpression([NotNull] NBMothParser.QuantifiedExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>QuantifiedExpression</c>
	/// labeled alternative in <see cref="NBMothParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuantifiedExpression([NotNull] NBMothParser.QuantifiedExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>CastPredicateExpression</c>
	/// labeled alternative in <see cref="NBMothParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCastPredicateExpression([NotNull] NBMothParser.CastPredicateExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>CastPredicateExpression</c>
	/// labeled alternative in <see cref="NBMothParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCastPredicateExpression([NotNull] NBMothParser.CastPredicateExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>SequenceEnumerationExpression</c>
	/// labeled alternative in <see cref="NBMothParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSequenceEnumerationExpression([NotNull] NBMothParser.SequenceEnumerationExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>SequenceEnumerationExpression</c>
	/// labeled alternative in <see cref="NBMothParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSequenceEnumerationExpression([NotNull] NBMothParser.SequenceEnumerationExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>NumberExpression</c>
	/// labeled alternative in <see cref="NBMothParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumberExpression([NotNull] NBMothParser.NumberExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>NumberExpression</c>
	/// labeled alternative in <see cref="NBMothParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumberExpression([NotNull] NBMothParser.NumberExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>FunctionCallExpression</c>
	/// labeled alternative in <see cref="NBMothParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionCallExpression([NotNull] NBMothParser.FunctionCallExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>FunctionCallExpression</c>
	/// labeled alternative in <see cref="NBMothParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionCallExpression([NotNull] NBMothParser.FunctionCallExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>IdentifierExpression</c>
	/// labeled alternative in <see cref="NBMothParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifierExpression([NotNull] NBMothParser.IdentifierExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>IdentifierExpression</c>
	/// labeled alternative in <see cref="NBMothParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifierExpression([NotNull] NBMothParser.IdentifierExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ExpressionOperator</c>
	/// labeled alternative in <see cref="NBMothParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionOperator([NotNull] NBMothParser.ExpressionOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ExpressionOperator</c>
	/// labeled alternative in <see cref="NBMothParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionOperator([NotNull] NBMothParser.ExpressionOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ParenthesesExpression</c>
	/// labeled alternative in <see cref="NBMothParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesesExpression([NotNull] NBMothParser.ParenthesesExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ParenthesesExpression</c>
	/// labeled alternative in <see cref="NBMothParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesesExpression([NotNull] NBMothParser.ParenthesesExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>StringExpression</c>
	/// labeled alternative in <see cref="NBMothParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStringExpression([NotNull] NBMothParser.StringExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>StringExpression</c>
	/// labeled alternative in <see cref="NBMothParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStringExpression([NotNull] NBMothParser.StringExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>EmptySetExpression</c>
	/// labeled alternative in <see cref="NBMothParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEmptySetExpression([NotNull] NBMothParser.EmptySetExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>EmptySetExpression</c>
	/// labeled alternative in <see cref="NBMothParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEmptySetExpression([NotNull] NBMothParser.EmptySetExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>NestedCoupleAsTupleExpression</c>
	/// labeled alternative in <see cref="NBMothParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNestedCoupleAsTupleExpression([NotNull] NBMothParser.NestedCoupleAsTupleExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>NestedCoupleAsTupleExpression</c>
	/// labeled alternative in <see cref="NBMothParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNestedCoupleAsTupleExpression([NotNull] NBMothParser.NestedCoupleAsTupleExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>EmptySequenceExpression</c>
	/// labeled alternative in <see cref="NBMothParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEmptySequenceExpression([NotNull] NBMothParser.EmptySequenceExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>EmptySequenceExpression</c>
	/// labeled alternative in <see cref="NBMothParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEmptySequenceExpression([NotNull] NBMothParser.EmptySequenceExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="NBMothParser.ltlStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLtlStart([NotNull] NBMothParser.LtlStartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="NBMothParser.ltlStart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLtlStart([NotNull] NBMothParser.LtlStartContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>LTLParentheses</c>
	/// labeled alternative in <see cref="NBMothParser.ltlFormula"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLTLParentheses([NotNull] NBMothParser.LTLParenthesesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>LTLParentheses</c>
	/// labeled alternative in <see cref="NBMothParser.ltlFormula"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLTLParentheses([NotNull] NBMothParser.LTLParenthesesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>LTLBPredicate</c>
	/// labeled alternative in <see cref="NBMothParser.ltlFormula"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLTLBPredicate([NotNull] NBMothParser.LTLBPredicateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>LTLBPredicate</c>
	/// labeled alternative in <see cref="NBMothParser.ltlFormula"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLTLBPredicate([NotNull] NBMothParser.LTLBPredicateContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>LTLPrefixOperator</c>
	/// labeled alternative in <see cref="NBMothParser.ltlFormula"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLTLPrefixOperator([NotNull] NBMothParser.LTLPrefixOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>LTLPrefixOperator</c>
	/// labeled alternative in <see cref="NBMothParser.ltlFormula"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLTLPrefixOperator([NotNull] NBMothParser.LTLPrefixOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>LTLKeyword</c>
	/// labeled alternative in <see cref="NBMothParser.ltlFormula"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLTLKeyword([NotNull] NBMothParser.LTLKeywordContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>LTLKeyword</c>
	/// labeled alternative in <see cref="NBMothParser.ltlFormula"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLTLKeyword([NotNull] NBMothParser.LTLKeywordContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>LTLInfixOperator</c>
	/// labeled alternative in <see cref="NBMothParser.ltlFormula"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLTLInfixOperator([NotNull] NBMothParser.LTLInfixOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>LTLInfixOperator</c>
	/// labeled alternative in <see cref="NBMothParser.ltlFormula"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLTLInfixOperator([NotNull] NBMothParser.LTLInfixOperatorContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
